// <auto-generated />
using System;
using Decolei.net.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Decolei.net.Migrations
{
    [DbContext(typeof(DecoleiDbContext))]
    [Migration("20250724184639_CorrigeStatusPagamentoDuplicado")]
    partial class CorrigeStatusPagamentoDuplicado

    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Decolei.net.Models.Avaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Avaliacao_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aprovada")
                        .HasColumnType("bit")
                        .HasColumnName("Avaliacao_Aprovada");

                    b.Property<string>("Comentario")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Avaliacao_Comentario");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("date")
                        .HasColumnName("Avaliacao_Data");

                    b.Property<int?>("Nota")
                        .HasColumnType("int")
                        .HasColumnName("Avaliacao_Nota");

                    b.Property<int>("PacoteViagem_Id")
                        .HasColumnType("int")
                        .HasColumnName("PacoteViagem_Id");

                    b.Property<int>("Usuario_Id")
                        .HasColumnType("int")
                        .HasColumnName("Usuario_Id");

                    b.HasKey("Id");

                    b.HasIndex("PacoteViagem_Id");

                    b.HasIndex("Usuario_Id");

                    b.ToTable("Avaliacao", (string)null);
                });

            modelBuilder.Entity("Decolei.net.Models.PacoteViagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PacoteViagem_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime")
                        .HasColumnName("PacoteViagem_DataFim");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("datetime")
                        .HasColumnName("PacoteViagem_DataInicio");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("PacoteViagem_Descricao");

                    b.Property<string>("Destino")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("PacoteViagem_Destino");

                    b.Property<string>("ImagemURL")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("PacoteViagem_ImagemURL");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("PacoteViagem_Titulo");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("Usuario_Id");

                    b.Property<decimal?>("Valor")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("PacoteViagem_Valor");

                    b.Property<string>("VideoURL")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("PacoteViagem_VideoURL");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("PacoteViagem", (string)null);
                });

            modelBuilder.Entity("Decolei.net.Models.Pagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Pagamento_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ComprovanteURL")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Pagamento_ComprovanteURL");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("date")
                        .HasColumnName("Pagamento_Data");

                    b.Property<string>("Forma")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Pagamento_Forma");

                    b.Property<int>("Reserva_Id")
                        .HasColumnType("int")
                        .HasColumnName("Reserva_Id");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Pagamento_Status");

                    b.HasKey("Id");

                    b.HasIndex("Reserva_Id");

                    b.ToTable("Pagamento", (string)null);
                });

            modelBuilder.Entity("Decolei.net.Models.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Reserva_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Data")
                        .HasColumnType("date")
                        .HasColumnName("Reserva_Data");

                    b.Property<string>("Numero")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Reserva_Numero");

                    b.Property<int>("PacoteViagem_Id")
                        .HasColumnType("int")
                        .HasColumnName("PacoteViagem_Id");

                    b.Property<string>("Reserva_StatusPagamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Reserva_Status");

                    b.Property<int>("Usuario_Id")
                        .HasColumnType("int")
                        .HasColumnName("Usuario_Id");

                    b.Property<decimal?>("ValorTotal")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("Reserva_ValorTotal");

                    b.HasKey("Id");

                    b.HasIndex("PacoteViagem_Id");

                    b.HasIndex("Usuario_Id");

                    b.HasIndex(new[] { "Numero" }, "Reserva_Numero_UQ")
                        .IsUnique()
                        .HasFilter("[Reserva_Numero] IS NOT NULL");

                    b.ToTable("Reserva", (string)null);
                });

            modelBuilder.Entity("Decolei.net.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Usuario_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Usuario_Documento");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Usuario_Email");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NomeCompleto")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Usuario_NomeCompleto");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Usuario_Email_Normalizado");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Usuario_LoginName_Normalizado");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Usuario_Senha");

                    b.Property<string>("Perfil")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Usuario_Perfil");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Usuario_Telefone");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Usuario_LoginName");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[Usuario_LoginName_Normalizado] IS NOT NULL");

                    b.HasIndex(new[] { "Documento" }, "Usuario_Documento_UQ")
                        .IsUnique();

                    b.HasIndex(new[] { "NormalizedEmail" }, "Usuario_Email_Normalizado_UQ")
                        .IsUnique()
                        .HasFilter("[Usuario_Email_Normalizado] IS NOT NULL");

                    b.HasIndex(new[] { "Email" }, "Usuario_Email_UQ")
                        .IsUnique();

                    b.HasIndex(new[] { "NormalizedUserName" }, "Usuario_LoginName_Normalizado_UQ")
                        .IsUnique()
                        .HasFilter("[Usuario_LoginName_Normalizado] IS NOT NULL");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("Decolei.net.Models.Viajante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Viajante_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Viajante_Documento");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Viajante_Nome");

                    b.Property<int>("Reserva_Id")
                        .HasColumnType("int")
                        .HasColumnName("Reserva_Id");

                    b.HasKey("Id");

                    b.HasIndex("Reserva_Id");

                    b.ToTable("Viajante", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Decolei.net.Models.Avaliacao", b =>
                {
                    b.HasOne("Decolei.net.Models.PacoteViagem", "PacoteViagem")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("PacoteViagem_Id")
                        .IsRequired()
                        .HasConstraintName("Avaliacao_PacoteViagem_FK");

                    b.HasOne("Decolei.net.Models.Usuario", "Usuario")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("Usuario_Id")
                        .IsRequired()
                        .HasConstraintName("Avaliacao_Usuario_FK");

                    b.Navigation("PacoteViagem");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Decolei.net.Models.PacoteViagem", b =>
                {
                    b.HasOne("Decolei.net.Models.Usuario", "Usuario")
                        .WithMany("PacotesCriados")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("PacoteViagem_Usuario_FK");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Decolei.net.Models.Pagamento", b =>
                {
                    b.HasOne("Decolei.net.Models.Reserva", "Reserva")
                        .WithMany("Pagamentos")
                        .HasForeignKey("Reserva_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Pagamento_Reserva_FK");

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("Decolei.net.Models.Reserva", b =>
                {
                    b.HasOne("Decolei.net.Models.PacoteViagem", "PacoteViagem")
                        .WithMany("Reservas")
                        .HasForeignKey("PacoteViagem_Id")
                        .IsRequired()
                        .HasConstraintName("Reserva_PacoteViagem_FK");

                    b.HasOne("Decolei.net.Models.Usuario", "Usuario")
                        .WithMany("Reservas")
                        .HasForeignKey("Usuario_Id")
                        .IsRequired()
                        .HasConstraintName("Reserva_Usuario_FK");

                    b.Navigation("PacoteViagem");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Decolei.net.Models.Viajante", b =>
                {
                    b.HasOne("Decolei.net.Models.Reserva", "Reserva")
                        .WithMany("Viajantes")
                        .HasForeignKey("Reserva_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Viajante_Reserva_FK");

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Decolei.net.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Decolei.net.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Decolei.net.Models.PacoteViagem", b =>
                {
                    b.Navigation("Avaliacoes");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("Decolei.net.Models.Reserva", b =>
                {
                    b.Navigation("Pagamentos");

                    b.Navigation("Viajantes");
                });

            modelBuilder.Entity("Decolei.net.Models.Usuario", b =>
                {
                    b.Navigation("Avaliacoes");

                    b.Navigation("PacotesCriados");

                    b.Navigation("Reservas");
                });
#pragma warning restore 612, 618
        }
    }
}
